                    # 4. ЦИКЛЫ
                    # 4.1 (Пример)
# Примечание: В range не используются отрицательные переменные!!!
# цикл for (переменная) in:

# for i in range(4):         # цикл for выводит результат в столбик
#     print(i)               # 4 пробела (отступ) в теле цикла

# ф-ия range с 2-мя параметрами:
# for i in range(4,14):      # диапазон - через запятую
#     print(i)               # 4 пробела (отступ) в теле цикла


# ф-ия range с 3-мя параметрами (3-ий параметр-шаг):
# for i in range(24,8,-2):               # диапазон - через запятую
#     print(i)                           # 4 пробела (отступ) в теле цикла


                    # 4.2 (Пример)
# for i in "Я учу Python":
#     print(i)


                    # 4.3 (Пример)
# Условие: необходимо вывести числа от 1 до 15 в порядке убывания.

# for i in range(15, 0, -1):
#     print(i)


                    # ЗАДАНИЕ 1 (4.4)
# Условие:
# Пользователь вводит строку и один символ. Программа должна вывести на экран строку без этого символа.
# Например, "Я учу программирование" символ "o"
# Результат: "Я учу прграммирвание".

# a = str(input("Введите текст: "))                                            # переменная типа string 1
# b = str(input("Введите символ, который желаете исключить из текста: "))      # переменная типа string 2
# c = ""
#
# for i in a:
#     if i != b:
#         c += i                 # то же самое, что c = c + i
# print("Результат: ", c)        #  print - снаружи, чтобы сработал 1 раз


                    # ЗАДАНИЕ 2 (4.5)
# Условие:
# Вводятся начало, конец и шаг последовательности,
# нужно вывести на экран данную последовательность чисел.

# a = int(input("Введите число начала последовательности: "))                # переменная типа int 1
# b = int(input("Введите число окончания последовательности: "))             # переменная типа int 2
# c = int(input("Введите шаг последовательности: "))                         # переменная типа int 3
#
#
# for i in range(a, b , c):
#     print(i)


                    # ЗАДАНИЕ 3 (4.6)
# Условие:
# Вывести на экран все числа в диапазоне от 54 до 9184 кратные 5.

# for i in range(54, 9185):                     # можно 9184 взять
#     if i % 5 == 0:
#         print(i)


                    # 4.7 (Пример)

# a = ['Окно', 'Дверь', 'Подоконник']    # ф-ия len - для возвращения числа элементов массива
# b = len(a)
#
# print(a, "Длина:", b)                 # длину - считает по количеству слов, а не по кол-ву символов всех элементов


                    # 4.8 (Пример)
# цикл for используется для перечисл. эл-тов массива(списка)

# a = [1, 7, 9, 10]
#
# for i in a:
#     print(i)            # рез-тат выводится в столбец


                    # 4.9 (Пример/Оператор break)
# Оператор break досрочно прерывает цикл, либо усл-е.

# a = [1, 7, 9, 10]
#
# for i in a:
#     print(i)       # 1 табуляция
#     if i == 9:
#         break      # 2 табуляции


                    # 4.10 (Пример/Оператор continue)
# Оператор continue начинает след. проход цикла, минуя оставшееся тело цикла.

# a = [1, 7, 9, 10]
#
# for i in a:
#     if i == 9:        # 1 табуляция
#         continue      # 2 табуляции, continue - пропускает круг цикла
#     print(i)          # 1 табуляция


                    # 4.11 (Пример/Добавление элемента)
# пример с зан.
# a = [10, 2, 3]
# print(a)
# a.append(7)
# print(a)

# пример 2
# b = [1, 2, 3, 4, 5, 6, 8, 9]
# print(b)
# b.append('Семь')
# print(b)


                    # ЗАДАНИЕ 5 (4.12)
# Условие:
# Массив чисел. Найти их сумму и произведение.

# a = [2, 4, 7, 9]
# S = 0                         # сумма
# P = 1                         # произведение
#
# for i in a:
#     S += i
#     P *= i
# print("Сумма: ", S)
# print("Произведение: ", P)


                    # ЗАДАНИЕ 6 (4.13)
# Условие:
# Таблица умножения от 1 до 9.

# for i in range(1, 10):
#     for l in range(1, 10):
#         print(i*l, ' ', end = ' ')     # end='' - строка, кот. доб-ся после посл. знач-я
#     print()
