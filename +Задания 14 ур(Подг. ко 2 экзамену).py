                    # 14. ПОДГОТОВКА КО 2-ОМУ ЭКЗАМЕНУ
                    # Задачи ко 2-ому экзамену

                    # 1 ЗАДАЧА (14.1)
# Условие:
# Создать папку на рабочем столе с помощью os.

# *Примечание: Путь к раб. столу: Локальный диск (С) - Пользователи - Asus

# 1 способ:
# import os
# os.chdir('C:\\Users\\Asus\\Desktop')              # вместо \ - \\ или /
# print("Текущая директория:", os.getcwd())
# os.mkdir('Пустая папка')                          # создание пустой папки на рабочем столе

# 2 способ:
# import os
# os.mkdir('C:\\Users\\Asus\\Desktop\\Пустая папка')   # путь к раб.столу


                    # 2 ЗАДАЧА (14.2)
# Условие:
# Удалить созданную папку с помощью os.

# 1 cпособ:
# import os
# os.chdir('C:\\Users\\Asus\\Desktop')                                  # вместо \ - \\ или /
# os.rmdir('Пустая папка')                                              # удаление указанной папки c рабочего стола

# 2 cпособ:
# import os
# os.rmdir('C:\\Users\\Asus\\Desktop\\Пустая папка')                   # удаление указанной папки c рабочего стола


                    # 3 ЗАДАЧА (14.3)
# Условие:
# Создать файл task_1.txt и переименовать его на renamefile.txt

# 1 cпособ:
# import os
# os.chdir('C:\\Users\\Asus\\Desktop')
# f = open('task_1.txt','w')
# f.write('Задание 3, создание файла task_1.txt  с последующим переименованием его на renamefile.txt')
# f.close()
# os.rename('task_1.txt','renamefile.txt')                             # переименов. файла с task_1.txt на renamefile.txt

# 2 cпособ:
# import os
# os.chdir('C:\\Users\\Asus\\Desktop')
# with open('task_1.txt', 'w') as f:
#     print(f)
# os.rename('task_1.txt', 'renamefile2.txt')

# 3 способ:
import os
# f = open('C:/Users/Asus/Desktop/task_1.txt', 'w')                         # вместо \ - \\ или /
# f.close()
# os.rename('C:/Users/Asus/Desktop/task_1.txt', 'C:/Users/Asus/Desktop/renamefile3.txt')

# *Примечание: если бы нужно было удалить созданный файл, то совершили бы действия, описанные ниже:
# *по усл. удаление файла не предусмотрено
# os.remove('C:/Users/Asus/Desktop/renamefile3.txt')

                    # 4 ЗАДАЧА (14.4)
# Условие:
# Создайте словарь из строки 'hellomynameis' следующим образом:
# в качестве ключей возьмите буквы строки, а значениями пусть будут числа, соответствующие количеству вхождений
# данной буквы в строку.

# 1 способ:
# a = 'hellomynameis'                 # строка
# b = {i: a.count(i) for i in a}
# print(b)

# 2 способ:
# a = 'hellomynameis'                # строка
#
# for i in a:
#     b = a.count(i)
#     c = {}
#     c[i] = b
#     print(c)


                    # 5 ЗАДАЧА (14.5)
# Условие:
# Даны два списка одинаковой длины. Необходимо создать из них словарь таким образом,
# чтобы элементы первого списка были ключами, а элементы второго — соответственно значениями нашего словаря.

# a = ['key1', 'key2', 'key3', 'key4', 'key5', 'key6']                # список a с ключами
# b = ['value1', 'value2', 'value3', 'value4', 'value5', 'value6']    # список b со значениями
#
# c = dict(zip(a, b))
# print("Словарь:", c)


                    # 6 ЗАДАЧА (14.6)
# Условие:
# Даны два списка чисел. Посчитайте, сколько чисел содержится одновременно как в первом списке, так и во втором.

# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]                      # cписок чисел 1
# b = [11, 9, 22, 4, 33, 7, 44, 8, 55, 1]                  # список чисел 2
# c =[ ]                                                   # одновременно присутствуют: 9, 4, 7, 8, 1 - 5 чисел
#
# for i in a:
#     for l in b:
#         if i == l:
#             c.append(i)
# print("Новый список с совпадающими числами: ", c)
# print("Количество совпадающих цифр:", len(c))


                    # 7 ЗАДАЧА (14.7)
# Условие:
# Ввести 10 чисел, данные числа добавить во множество.

# n = 0                  # количество
# b = set([])            # пустое множество
#
# while n < 10:
#     a = int(input("Внесите число: "))
#     n += 1
#     b.add(a)
# print(b)


                    # 8 ЗАДАЧА (14.8)
# Условие:
# Создать кортеж с числами от 1 до 50 используя генератор списков.

# 1 способ:
# a = [i for i in range(1, 51)]
# print(a, type(a))             # список
# b = tuple(a)
# print(b, type(b))            # кортеж

# 2 способ:
# a = []
# for i in range(1, 51):
#     a.append(i)
# b = tuple(a)
# print(b, type(b))


                    # 9 ЗАДАЧА (14.9)
# Условие:
# Дан словарь с числовыми значениями. Необходимо их все перемножить и вывести на экран.

# 1 способ:
# d = {'d1': 2, 'd2': 4, 'd3': 6, 'd4': 8, 'd5': 10}     # словарь с числ.значениями
#
# result = 1                                             # умножение
# for key in d:
#     result = result * d[key]
# print(result)                                           # Результат: 2 * 4 * 6 * 8 * 10 = 3840

# 2 способ:
# d = {'d1': 2, 'd2': 4, 'd3': 6, 'd4': 8, 'd5': 10}     # словарь с числ.значениями
# v = d.values()                                         # значения
# print('Значения', v)
#
# result = 1                                             # умножение
# for i in v:
#     result = result * i
# print(result)                                          # Результат: 2 * 4 * 6 * 8 * 10 = 3840


                    # 10 ЗАДАЧА (14.10)
# Условие:
# В списке целых чисел определить два наименьших элемента. Они могут быть как равны между собой
# (оба являться минимальными), так и различаться.

# 1 способ:
# a = [134, 22, 63, 94, 5, 16, 73, 18, 9, 100]     # наименьшие числа: 5 и 9
# a.sort(reverse=True)
# print("Список целых чисел: ", a)
# print("Наименьшие значения: ", a[-1], a[-2])

# 2 способ:
# import random
# a = [random.randint(0, 100) for i in range(10)]
# a.sort()
# print("Список целых чисел: ", a)
# print("2 наименьших значения: ", a[0:2])


                    # 11 ЗАДАЧА (14.11)
# Условие:
# В списке, содержащем положительные и отрицательные целые числа, вычислите сумму чётных положительных элементов.

# 1 способ:
# сумма чётных положительных элементов: 20 + 48 + 6 = 74

# a = [20, 48, 6, 83, 13, 0, -2, -77, -4, -6, -8, -95]
#
# s = 0                               # сумма
# for i in a:
#     if i % 2 == 0 and i >= 0:
#         s = s + i                   # или s += i
# print(s)

# 2 способ:
# import random
# a = [random.randint(-10, 10) for i in range(15)]      # 15 элементов
# print(a)
#
# s = 0                                                 # сумма
# for i in a:
#     if i % 2 == 0 and i >= 0:
#         s += i
# print("Сумма чётных положительных элементов: ", s)


                    # 12 ЗАДАЧА (14.12)
# Условие:
# Вывести на экран столько элементов ряда Фибоначчи, сколько указал пользователь.
# Например, если на ввод поступило число 6, то вывод должен содержать шесть первых чисел ряда Фибоначчи: 1 1 2 3 5 8 13.

# *Примечание: Ряд Фибоначчи - послед-ть натуральных чисел, где каждое последующее число явл. суммой двух предыдущ.
# *Примечание: Первый и второй члены последовательности Фибоначчи равны единице (иногда послед-ть может начин-ся с 0).
# *Примечание: Fn = Fn-1 + Fn-2

# 1 способ (через цикл while):
# F1 = 1
# F2 = 1
# Fib = int(input('Введите номер элемента ряда Фибоначчи: '))
# print("Последовательность Фибоначчи:")
# print(F1, F2, end=' ')
#                                            # 1 1 2 3 5 8 13 21 34 55 89 144 (12 первых значений ряда Фибоначчи)
# while Fib > 2:
#     Fib_sum = F1 + F2               # 1.   Чтобы не писать # 1., # 2., # 3. можно сделать запись: F1, F2 = F2, F1 + F2
#     F1 = F2                         # 2.
#     F2 = Fib_sum                    # 3.
#     print(F2, end =' ')
#     Fib -= 1                        # Fib = Fib - 1

# 2 способ (через цикл for):
# F1 = 1
# F2 = 1
# Fib = int(input('Введите номер элемента ряда Фибоначчи: '))
# print("Последовательность Фибоначчи:")
# print(F1, F2, end=' ')
#                                            # 1 1 2 3 5 8 13 21 34 55 89 144 (12 первых значений ряда Фибоначчи)
# for i in range(2, Fib):
#     Fib_sum = F1 + F2
#     F1 = F2
#     F2 = Fib_sum
#     print(F2, end =' ')

