                    # 8. 1-ЫЙ ЭКЗАМЕН
                    # ЗАДАНИЕ 1 (экз)
# Используя стандартные арифметические операции представьте самое большое целое число из цифр 4, 4, 4
# и приведите его значение.

# a = 4
# b = 4
# c = 4

# Арифметические операции:
# d = a + b + c
# print("Операция сложения: ", d)
#
# e =a * b * c
# print("Операция умножения: ", e)
#
# g = ((a ** a) + (b ** b) + (c ** c))
# print("Сочетание операции сложения и возведения в степень: ", g)
#
# h = ((a ** a) * (b ** b) * (c ** c))
# print("Сочетание операции умножения и возведения в степень: ", h)
#
# k = a ** b ** c
# print("Возведение всех чисел в степень: ", k)
#
# if d > e and d > g and d > h and d > k:
#     print("Наибольшее: ", d)
# elif e > d and e > g and e > h and e > k:
#     print("Наибольшее: ", e)
# elif g > d and g > e and g > h and g > k:
#     print("Наибольшее: ", g)
# elif h > d and h > e and h > g and h > k:
#     print("Наибольшее: ", h)
# elif k > d and k > e and k > g and d > h:
#     print("Наибольшее: ", k)


                    # ЗАДАНИЕ 2 (экз)
# Написать программу для вычисления значения выражений.
# Проверить правильность выполнения задания с помощью тестовых значений.

# a:
# a = int(input("Введите значение переменной a: "))
#
# h_1 = (1 + a + (a ** 2)) / (2 * a + (a ** 2))
# h_2 = (1 - a + (a ** 2)) / (2 * a - (a ** 2))
# b1 = h_1 + 2 - h_2
#
# b11 = 1 / b1                                   # убираем -1 степень.
#
# b2 = 5 - 2 * (a ** 2)
# y = b11 * b2
# print(y)


# b:
# import math
#
# a = int(input("Введите значение a: "))      # переменная типа int 1
# b = int(input("Введите значение b: "))      # переменная типа int 2
# c = int(input("Введите значение c: "))      # переменная типа int 3
#
# y = 1 / 4 * (math.sin(a + b - c) + math.sin(b + c - a) + math.sin(c + a - b) - math.sin(a + b + c))
# print(y)


                    # ЗАДАНИЕ 3 (экз)
# Условие:
# Создать пустую переменную.
# Проверить ее на истинность и ложность. Объясните полученный результат.

# a = ''
# print(bool(a))                                        # ф-ия bool проверяет истинность или ложность любого значения
                                                       # возвращает булево значение, т. е. либо True, либо False.
# Объяснение:
# Результат False, поскольку строка пустая (пробел отсутствует)!

# Функция bool() вернёт True:
# - непустая строка (в т.ч., если это один или несколько пробелов);
# - ненулевое число (в т.ч. меньшее 1, напр. -5);
# - непустой список/ кортеж (даже если он содержит 1 пустой элемент, напр. пустой кортеж);
# - функция.


                    # ЗАДАНИЕ 4 (экз)
# Условие:
# Даны два целых числа m и n (m≤n).
# Напишите программу, которая выводит все числа от m до n включительно.

# m = int(input("Введите значение переменной m: "))               # переменная типа int 1
# n = int(input("Введите значение переменной n: "))               # переменная типа int 2
#
# if m <= n:
#     for i in range(m,n+1):
#         print(i)
# else:
#     print("Ошибка! По условию m <= n! Внесите значения снова!")


                    # ЗАДАНИЕ 5 (экз)
# Условие:
# Даны два целых числа m и n.
# Напишите программу, которая выводит все числа от m до n включительно в порядке возрастания,
# если m<n, или в порядке убывания в противном случае.

# 1 способ:
# m = int(input("Введите значение переменной m: "))               # переменная типа int 1
# n = int(input("Введите значение переменной n: "))               # переменная типа int 2
#
# if m < n:
#     for i in range(m,n+1):
#         print("Числа от m до n в порядке возрастания:", i)
# else:
#     for i in reversed(range(n,m+1)):
#         print("Числа от m до n в порядке убывания:", i)


# 2 способ:
# m = int(input("Введите значение переменной m: "))               # переменная типа int 1
# n = int(input("Введите значение переменной n: "))               # переменная типа int 2
#
# if m < n:
#     n = n + 1
#     for i in range(m,n):
#         print("Числа от m до n в порядке возрастания:", i)
# else:
#     n = n - 1
#     for i in range(m,n,-1):
#         print("Числа от m до n в порядке убывания:", i)


                    # ЗАДАНИЕ 6 (экз)
# Условие:
# В строке “Иван Иванов” поменяйте местами слова.
# Может быть предоставлена любая строка с именем и фамилией.
# например, “Петр Иванов” => “Иванов Петр”

# пример 6.1
# a = "Иван Иванов"                                   # переменная типа string 1
# print(a[5:], a[:4])

# пример 6.2
# b = 'Пётр Петров'                                   # переменная типа string 2
# print(b[5:11:1], b[-12:-7])

# пример 6.3
# a = "Василий Васильев "                            # переменная типа string 3
# print(a[8:] + a[:7])


                    # ЗАДАНИЕ 7 (экз)
# Условие:
# Создать список с числами от 1 до 50, используя генератор списков.

# a = [ ]                                           # пустой список
#
# for i in range(1,51):
#     a.append(i)
# print(a)


                    # ЗАДАНИЕ 8 (экз)
# Условие:
# Вам передан массив чисел. Известно, что каждое число в этом массиве имеет пару, кроме одного:
# : [1, 5, 2, 9, 2, 9, 1] => 5

# 8.1 (1-ый способ решения задания)
# a = [1, 5, 2, 9, 2, 9, 1]
# print("Исходный массив: ",a)
# a.append(5)                                                  # добавление 5-ки в конец массива
# print("Добавление 5-ки в конец массива:", a)

# 8.2 (2-ой способ решения задания)
# b = [1, 5, 2, 9, 2, 9, 1]
# print("Исходный массив: ", b)
# b.insert(5, 5)                                                    # позицию задаём самостоятельно
# print("Добавление элемента в массив на 5 позицию:", b)

# 8.3
# c = [1, 5, 2, 9, 2, 9, 1]
# print("Массив чисел:", c)
# print("Количество единиц в массиве:", c.count(1))
# print("Количество пятёрок в массиве:", c.count(5))
# print("Количество двоек в массиве:", c.count(2))
# print("Количество девяток в массиве:", c.count(9))


                    # ЗАДАНИЕ 9 (экз)
# Условие:
# Дан список [student1, student2, student3] с помощью цикла for добавить к каждому элементу списка слово “_good”.
# Вывести на экран.

# a = [ "student1", "student2", "student3"]
# b = [ ]
# print("Исходный список:", a)
#
# for i in a:
#     b.append(i +'_good')
# print("Новый список:", b)


                    # ЗАДАНИЕ 10 (экз)
# Условие:
# Вывести на экран числа от 0 до 50, кроме 35.

# с использованием цикла for:
# for i in range(0, 51):
#     if i != 35:
#         print(i)


# с использованием цикла while:

# i = 0
#
# while i <= 50:
#     if i != 35:
#         print(i)
#     i += 1


                    # ЗАДАНИЕ 11 (экз)
# Условие:
# Дана строка [“hello my friend”, “my name is”, “house”, “cat”, “dog”].
# В новый список добавить элементы, которые содержат пробел.

# a = ['hello my friend', 'my name is', 'house', 'cat', 'dog']
# b = []
#
# for i in a:
#     if i.find(' ') != -1:                   # м-д i.find - для поиска индекса подстроки в строке
#         b.append(i)                         # -1 -кол-во пробелов
# print(b)