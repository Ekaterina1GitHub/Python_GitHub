                    # 13. ФАЙЛЫ
                    # 13.1.1. Пример / Открыть файл из рабочей директории в режиме чтения
# otkrit_fail = open('example.txt', 'r')
# print(otkrit_fail)                  # выводим объект
# print(*otkrit_fail)                 # выводим содержимое файла (только читает английский текст!, русск.буквы-не выводит)

                    # 13.1.2. Пример / Закрытие файла
# м-д close ()            # после закрытия этот файл нельзя будет использовать до тех пор, пока заново его не открыть.
# otkrit_fail.close()


                    # 13.2. Пример / Чтение файла
                    # 13.2.1. Пример / Ф-ия read()-для чтения содержимого файла после открытия его в режиме чтения (r).
# otkrit_fail = open('example.txt', 'r')
#
# print(otkrit_fail.read(7)) # чтение первых 7 символов из example.txt         (Результат: This is)
# print(otkrit_fail.read(7)) # чтение  с 8-ого символа из example.txt          (Результат:  a text)

                    # 13.2.2. Пример
# otkrit_fail = open('example.txt', 'r')
# print(otkrit_fail.read())                       # чтение всех символов из example.txt

                    # 13.2.3. Пример / Ф-ия readдline() - для построчного чтения содержимого файла.
# 1 способ:
# x = open('test.txt', 'r')
#                                                        # Результат: строки разделены между собой пустой строкой!!!
# print(x.readline()) # прочитать первую строку
# print(x.readline()) # прочитать вторую строку


# 2 способ (ф-ия readlineS):
# x = open('test.txt', 'r')
#                                                 # Рез-т: выводится список и после каждого эл-та стоит ".\n'"(кроме посл)
# print(x.readlines()) # прочитать все строки     # Рез-т: ['This is line1.\n', 'This is line2.\n', 'This is line3.']

# 3 способ (ф-ия readlineS):
# x = open('test.txt', 'r')
#
# print(x.readlines(1))        # выведение 1-ой строки              Рез-т: ['This is line1.\n']
# print(x.readlines())         # выведение 2-ой и 3-ей строчек      Рез-т: ['This is line2.\n', 'This is line3.']

# 4 способ (ф-ия readlineS):
# x = open('test.txt', 'r')
#
## print(x.readlines(1)) - закомментировали
# print(x.readlines(3))                   # выведение 1-ой строки      Рез-т: ['This is line1.\n']


                    # 13.3. Пример / Запись файла
# 13.3.1. Ф-ия write()-исп-ся для записи в файлы Пайтон, открытые в режиме записи.
# файла xyz.txt  - не существует. Он будет создан при попытке открыть его в режиме чтения (r).

# f = open('xyz.txt','w')             # открытие в режиме записи
# f.write('Hello \nWorld')            # запись Hello World в файл
# f.close()                           # закрытие файла

# 13.3.2. (Пример)
# a = open('xyz.txt','w')                 # открытие в режиме записи
# a.write('Hola! \nQue tal?')             # запись Hola! Que tal? в файл
# a.close()                               # закрытие файла
# a = open('xyz.txt', 'r')                # открытие в режиме чтения
# print(*a)                               # выводим содержимое файла
# a.close()                               # закрытие файла


                    # 13.4. Пример / Переименование файлов
# import os
# os.rename('xyz.txt', 'abc.txt')                                     # переименование xyz.txt в abc.txt


                    # 13.5. Пример / Вывод текущей директории
# import os
#
# print("Текущая директория: ", os.getcwd())               # вывести текущую директорию
                                                          # Текущая директория:  D:\КУРСЫ\Python IT\Проект


                    # 13.6. Пример / Создание папки(каталога)
# import os
#
# print("Текущая директория: ", os.getcwd())
#
# os.mkdir('folder')              # создать пустой каталог (папку)

# при повторном запуске программы:
# FileExistsError: [WinError 183] Невозможно создать файл, так как он уже существует: 'folder'


                    # 13.7. Пример / Изменение директории
# import os
#
# os.chdir('folder')                                                            # изменение текущего каталога на 'folder'
#
# print('Текущая директория изменилась на folder:', os.getcwd())                # вывод текущей папки
                                                         # Текущ директ изм. на folder: D:\КУРСЫ\Python IT\Проект\folder
                    # 13.7.1. Пример* (Добавление файла в директорию)
# import os
# s = open('fail.txt','w')
# s.write('red \nyellow')
# s.close()
# os.chdir('folder')
# print('Текущая директория:', os.getcwd())


                    # 13.8. Пример / Создание вложенных папок
# import os
#
# os.chdir('folder')                                                 # изменение текущего каталога на 'folder'
#
# os.chdir('..')                                                     # вернуться в предыдущую директорию
#
# os.makedirs('nested1/nested2/nested3')                             # сделать несколько вложенных папок


                    # 13.9. Пример / Удаление файлов
# import os
#
# os.remove('fail_pustoi.txt')  # удалить этот файл


                    # 13.10. Пример / Удаление директорий
# import os
#
# os.rmdir('folder')   # удалить папку 'folder'


                    # 13.11. Пример / Удаление каталогов (os.removedirs-удаление только пустых каталогов)
# import os
#
# os.removedirs('nested1/nested2/nested3')                 # удалить вложенные папки: nested1, nested2, nested3


                    # ЗАДАНИЕ 1 (13.12)
# Условие:
# В файле в одну строку записаны слова и числа через пробел или _
# Найти сумму всех чисел.

import os
# with open('zadanie1_lesson13.txt','r') as x:      # открыли файл в перем. x
#     a = x.readlines()                             # в перем. a прочитали весь файл
#     print(a)                                      # Рез-тат: ['12 night 34 day_56_sun_78 moon 90']
#
# for i in a:
#     i = i.replace('_', ' ')                # замена всех '_' на ' ' (пробел)
#     t = i.split(' ')                       # избавление от пробелов
# print(t)                                   # Рез-тат: ['12', 'night', '34', 'day', '56', 'sun', '78', 'moon', '90']
# s = 0                                      # сумма
# for i in t:
#     if i.isdigit():
#         i = int(i)
#         s += i                            # s = s + i
# print(s)                                  # Рез-тат : 12 + 34 + 56 + 78 + 90 = 270


                    # ЗАДАНИЕ 2 (13.13)
# Условие:
# Файл содержит числа и буквы. Каждый записан в отдельной строке.
# Нужно считать содержимое в список так, чтобы сначала шли числа по возрастанию,
# а потом слова по возрастанию их длины.

                    # 1 способ*:
# f = open('zadanie2_lesson13.txt', 'r')
# a = []                  # пустой список для слов
# b = []                  # пустой список для чисел
# c = f.readlines()       # в перем. c прочитали весь файл
# print("Содержимое файла: ", c)
#
# for i in c:
#     i = i.replace('\n', '')      # замена всех '\n' на ''
#     j = i.split(' ')             # избавление от пробелов
#     i = i[::]
#     if i.isalpha():
#         i = str(i)
#         a.append(i)
#     else:                       # if i.isdigit()::
#         i = int(i)
#         b.append(i)
# print("Слова: ", a)
# print("Числа: ", b)
# a.sort()              # cортировка слов по возрастанию
# b.sort()              # cортировка чисел по возрастанию
# print("Числа (по возр.) и слова (по возр.):", b + a)          # cложение списков a и b

                     # 2 способ (из презентации):
# f = open('zadanie2_lesson13.txt')
# b = []
# n = []
# s = f.readlines()
# print(s)
# for i in s:
#     i = i[:-1]
#     if i.isalpha():
#         i = str(i)
#         b.append(i)
#     elif i.isdigit():
#         i = int(i)
#         n.append(i)
# print(b)
# print(n)
# n.sort()
# b.sort()
# mas = n + b
# print(mas)


                    # ЗАДАНИЕ 3 (13.14)
# Условие:
# Создать текстовый файл, записать в него построчно данные, которые вводит пользователь.
# Окончанием ввода пусть служит пустая строка.

# fail_name = input("Введите название файла: ")                       # название файла
#
# f = open(fail_name,'w')                                             # открытие файла в режиме записи(изменения)
#
# while True:                                                         # бесконечный цикл while True
#     b = input("Введите данные, которые будут находиться в файле: ") # построчные данные, которые вводит пользователь
#     if b == ' ':                                                    # если пользователь внёс пустую строку
#         break                                                       # то программа завершится (остановка цикла)
#     f.write(b + '\n')                                               # запись переменной b в файл + переход на новую строку
# f.close()                                                           # закрытие файла


                    # ЗАДАНИЕ 4 (13.15)
# Условие:
# В текстовом файле посчитать количество строк, а также для каждой отдельной строки определить количество
# в ней символов.

# f = open('zadanie4_lesson13.txt', 'r')
#
# number_of_lines = 0            # количество строк
#
# for i in f:
#     print("Строка:", i, "Количество символов в строке: ", len(i)-1)
#     number_of_lines = number_of_lines + 1
# print("Количество строк: ", number_of_lines)
# f.close()