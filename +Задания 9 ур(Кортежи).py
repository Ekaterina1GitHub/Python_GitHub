                    # 9. КОРТЕЖИ
                    # 9.1 (Пример)
# a = (1, 2, 3, 4, 5, 6)               # кортеж
# print(a)

                    # 9.2 (Пример)
# a = (1, 2, 3, 4, 5, 6)
# b = [1, 2, 3, 4, 5, 6]
# c = 1, 2, 3, 4, 5, 6
#
# print(a.__sizeof__(), type(a))
# print(b.__sizeof__(), type(b))
# print(c.__sizeof__(), type(c))


                    # 9.3 (Пример / Из кортежа можно извлекать элементы и брать срезы)
# a = (1, 2, 3, 4, 5, 6)
# print(a[0:3])
# print(a[:3])
# print(a[1:])
# print(a[2: :2])
# print(a[: :2])

# Изменять элементы кортежа нельзя:
# a[1]=11
# print(a)                          # TypeError: 'tuple' object does not support item assignment


                      # 9.4 (Пример / Преобразование кортежа в список и списка в кортеж):
# a = (10, 2.13, "square", 89, 'C')   # кортеж
# b = [1, 2, 3]                       # список
# c = list(a)       # преобразование кортежа в список (ф-ия list())
# d = tuple(b)      # преобразование списка в кортеж (ф-ия tuple())
#
# print("Был кортеж: ", a, type(a))
# print("Был список: ", b, type(b))
# print("Стал список: ", c, type(c))
# print("Стал кортеж: ", d, type(d))


                    # 9.5 (Пример / Кортежи могут содержать вложенные списки):
                    # 9.5.1 (Пример)
# nested = (1, "do", ["param", 10, 20])
# print(nested)
                    # 9.5.2 (Пример / Вложенный список можно изменить, а кортеж -нет)
# nested = (1, "do", ["param", 10, 20])
# nested[2][1] = 15                       # 1-ый индекс-позиция вложенного объекта, 2-ой- индекс эл-та внутри влож. списка
# print(nested)                           # 10 сменится на 15


                    # 9.6 (Пример / Объединение кортежей)
                    # 9.6.1
# x = (1, 2, 3, 4)                                   # переменная типа tuple 1
# y = (5, 6, 7, 8)                                   # переменная типа tuple 2
#
# z = x + y                                         # объединение 2-ух кортежей для формирования нового кортежа
# print(z)

                    # 9.6.2 (Проверка объединения кортежа и списка)
# x = (1, 2, 3, 4)                                # переменная типа tuple
# y = [5, 6, 7, 8]                                # переменная типа list
#
# z = x + y                                       # объединение кортежа и списка
# print(z)
# !!! Результат: TypeError: can only concatenate tuple (not "list") to tuple (ошибка) !!!


                    # 9.7 (Умножение кортежей)
# x = (1, 2, 3, 4)
# z = x * 2
# print(z)                                                   # кортеж повторится несколько раз


                    # 9.8 (Функции кортежей)
                    # 9.8.1. Функции count() и len()
# a = (1, 2, 3, 4, 5, 5)
# print(a.count(5), len(a))

                    # 9.8.2. Функции max() и min()
# a = (1, 2, 3, 4, 5, 5)
# print('max ', max(a), 'min ', min(a))


                    # ЗАДАНИЕ 1 (9.9)
# Условие:
# Создайте кортеж из случайных 10 чисел.
# Найдите его максимальный и минимальный элемент.

                     # 1-ый способ:
# import random
# a = [random.randint(1, 999) for i in range(10)]
# print("Список из 10 случайных чисел: ", a, type(a))
# b = tuple(a)
# print("Кортеж из 10 случайных чисел:", b, type (b))
# print('max ', max(b), 'min ', min(b))


                    # 2-ой способ:
# import random
#
# a = []                        # пустой список
# for i in range(10):
#     a.append(random.randint(0, 100))
# print("Список из 10 случайных чисел:", a, type(a))
# b = tuple(a)
# print("Кортеж из 10 случайных чисел:", b, type(b))
# b_1 = len(b)
# print("Количество элементов:", b_1)
# print('max ', max(b), 'min ', min(b))


                    # ЗАДАНИЕ 2 (9.10)
# Условие:
# Заполните один кортеж 10 случайными целыми числами от 0 до 5 включительно.
# Также заполните 2-ой кортеж числами от -5 до 0.
# Объедините два кортежа с помощью оператора +, создав тем самым третий кортеж.
# С помощью метода кортежа count() определите в нём количество нулей.
# Выведите на экран 3-ий кортеж и количество нулей в нём.

                    # 1 способ:
# import random
#
# a = []                                                # пустой список 1
# for i in range(10):
#     a.append(random.randint(0, 5))
# b = tuple(a)                                          # список перевели в кортеж
# print("Первый кортеж с 10 случайными целыми числами от 0 до 5 включительно:", b)
#
#
# a1 = []                                               # пустой список 2
# for i in range(10):
#     a1.append(random.randint(-5, 0))
# b1 = tuple(a1)                                        # список перевели в кортеж
# print("Второй кортеж с 10 случайными целыми числами от -5 до 0: ", b1)
#
# c = b + b1                                            # объединение кортежей с помощью оператора "+"
# print("Третий кортеж: ", c)
# print("Количество 0 в 3-ем кортеже: ", c.count(0))


                    # 2 способ:
# import random
# a = [random.randint(0,5) for i in range(10)]
# b = [random.randint(-5,0) for i in range(10)]
# a1 = tuple(a)
# b1 = tuple(b)
# c1 = a1 + b1                                           # объединение кортежей с помощью оператора "+"
# print("Третий кортеж: ", c1)
# print("Количество 0 в 3-ем кортеже: ", c1.count(0))


                    # ЗАДАНИЕ 3 (9.11)
# Условие:
# Вывести данные кортежа без скобок, через запятую.
# Обязательно: элементы кортежа - строки.

# a = ("Солнце", "Звезды", "Луна", "Небо")              # кортеж
# print("Кортеж: ", a)
# print(', '.join(a))


                    # ЗАДАНИЕ 4 (9.12)
# Условие:
# Даны 2 кортежа:
# A = (13, 5, 43, 49, 67, 32, 12, 98, 6, 10, 34, 20, 55, 68, 14, 60, 14)
# В = (53, 21, 4, 23, 76, 3, 43, 12, 54, 342, 21)
# Необходимо определить:
# 1. Сумма элементов какого из кортежей больше и вывести соответствующее сообщение
# на экран (Сумма больше в кортеже - ...)
# 2. Вывести на экран порядковые номера (индекс + 1) минимальных элементов этих кортежей.
# Примечание: Индекс числа 5 - 1, а порядковый номер числа 5 - 2.
# Примечание: Индекс числа 3 - 5, а порядковый номер числа 3 - 6.

# 1 способ:
# A = (13, 5, 43, 49, 67, 32, 12, 98, 6, 10, 34, 20, 55, 68, 14, 60, 14)     # 600 - сумма
# B = (53, 21, 4, 23, 76, 3, 43, 12, 54, 342, 21)                            # 652 - сумма
#
# S_A = 0      # сумма кортежа А
# S_B = 0      # сумма кортежа В
#                     #Найдём сумму каждого из кортежей:
# for i in A:
#     S_A = i + S_A
# print("Сумма кортежа А: ", S_A)
#
# for i in B:
#     S_B = i + S_B
# print("Сумма кортежа B: ", S_B)
#                                                                                                                # 1
# if S_A > S_B:
#     print("Сумма кортежа А -", S_A, ">", "суммы кортежа B -", S_B)
# else:
#     print("Сумма кортежа B -", S_B, ">", "суммы кортежа A -", S_A)
#
#                      #Порядковые номера минимальных элементов кортежей A и B:                                # 2
# print('min (A)-', min(A), "Порядковый номер минимального элемента кортежа A: ", A.index(min(A))+1)
# print('min (B)-', min(B), "Порядковый номер минимального элемента кортежа B: ", B.index(min(B))+1)


# 2 способ:
# A = (13, 5, 43, 49, 67, 32, 12, 98, 6, 10, 34, 20, 55, 68, 14, 60, 14)     # 600 - сумма
# B = (53, 21, 4, 23, 76, 3, 43, 12, 54, 342, 21)                            # 652 - сумма
#
# s_A = sum(A)
# s_B = sum(B)
# print("Сумма кортежа A:", s_A)
# print("Сумма кортежа B:", s_B)
#
# if s_A > s_B:                                                                                                       # 1
#     print("Сумма больше в кортеже А")
# else:
#     print("Сумма больше в кортеже B")
#
# print('min A -', min(A),'Порядковый номер минимального элемента -', A.index(min(A))+1)                              # 2
# print('min B -', min(B),'Порядковый номер минимального элемента -', B.index(min(B))+1)


                    # ЗАКРЕПЛЕНИЕ ТЕМЫ (9.13)
# 1. Создайте кортеж с цифрами от 0 до 9 и посчитайте сумму.

# 1 способ*:
# a = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)         # 45 - сумма
# s_a = sum(a)
# print(s_a, type(s_a))

# 2 способ:
# a = tuple(range(10))                         # 45 - сумма
# s_a = sum(a)
# print(s_a, type (s_a))

# 3 способ:
# a = []                                      # пустой список
# for i in range(10):
#     a.append(i)
# a = tuple(a)                                # список сменили на кортеж
# b = sum(a)
# print(b)

# 2. Выведите статистику частности букв в кортеже
# long_word = ('т','т','а','и', 'и', 'а','и', 'и','и','т','т', 'а', 'и', 'и', 'и', 'и', 'и','т', 'и')
#
# long_word = ('т','т','а','и', 'и', 'а','и', 'и','и','т','т', 'а', 'и', 'и', 'и', 'и', 'и','т', 'и')
# print("Буква 'т':", long_word.count('т'))
# print("Буква 'а':", long_word.count('а'))
# print("Буква 'и':", long_word.count('и'))

# 3. Допишите скрипт для расчёта средней температуры
# Постарайтесь посчитать кол-во дней на основе week_temp.
# Так скрипт сможет работать с данными за любой период.

# week_temp = (26, 29, 34, 32, 28, 26, 23)         # температура за неделю (за 7 дней)
# sum_temp = sum(week_temp)                        # сумма температуры за неделю = 198 градусов
# days = len(week_temp)                            # дни = 7 дней
# mean_temp = sum_temp / days                      # средняя температура = Сумма температ. за неделю / дни
#
# print(int(mean_temp))                            # целое число
# print(float(mean_temp))                          # число с плавающей точкой
